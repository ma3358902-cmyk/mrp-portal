databases:
  - name: mrp-db
    plan: free

services:
  - type: web
    name: mrp-backend
    plan: free
    runtime: node
    rootDir: backend-nest
    # Pin Node and make install robust on Render builders.
    envVars:
      - key: NODE_VERSION
        value: 18.19.0
      - key: DATABASE_URL
        fromDatabase:
          name: mrp-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: PORT
        value: 8080
      - key: CORS_ORIGIN
        fromService:
          name: mrp-frontend
          type: web
          envVarKey: RENDER_EXTERNAL_URL
    buildCommand: >-
      corepack enable || true &&
      npm ci --legacy-peer-deps || npm install --legacy-peer-deps &&
      npx prisma generate &&
      npm run build
    # Wait for DB, run migrations & seed, then boot API.
    startCommand: >-
      sh -c "echo 'Waiting for DB...'; until npx prisma migrate deploy; do echo 'DB not ready yet, retrying in 5s...'; sleep 5; done; node prisma/seed.js; node dist/main.js"

  - type: web
    name: mrp-frontend
    plan: free
    runtime: node
    rootDir: frontend-next
    envVars:
      - key: NODE_VERSION
        value: 18.19.0
      - key: NEXT_PUBLIC_API_URL
        fromService:
          name: mrp-backend
          type: web
          envVarKey: RENDER_EXTERNAL_URL
    buildCommand: >-
      corepack enable || true &&
      npm ci --legacy-peer-deps || npm install --legacy-peer-deps &&
      npm run build
    startCommand: npm start
